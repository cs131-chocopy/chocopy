{
  "kind" : "Program",
  "location" : [ 1, 1, 6, 9 ],
  "declarations" : [ {
    "kind" : "FuncDef",
    "location" : [ 1, 1, 3, 14 ],
    "name" : {
      "kind" : "Identifier",
      "location" : [ 1, 5, 1, 5 ],
      "name" : "f"
    },
    "params" : [ ],
    "returnType" : {
      "kind" : "ClassType",
      "location" : [ 1, 8, 1, 8 ],
      "className" : "<None>"
    },
    "declarations" : [ {
      "kind" : "GlobalDecl",
      "location" : [ 2, 5, 2, 12 ],
      "variable" : {
        "kind" : "Identifier",
        "location" : [ 2, 12, 2, 12 ],
        "name" : "x"
      }
    } ],
    "statements" : [ {
      "kind" : "AssignStmt",
      "location" : [ 3, 5, 3, 13 ],
      "targets" : [ {
        "kind" : "Identifier",
        "location" : [ 3, 5, 3, 5 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "name" : "x"
      } ],
      "value" : {
        "kind" : "BinaryExpr",
        "location" : [ 3, 9, 3, 13 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "left" : {
          "kind" : "Identifier",
          "location" : [ 3, 9, 3, 9 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "name" : "x"
        },
        "operator" : "+",
        "right" : {
          "kind" : "IntegerLiteral",
          "location" : [ 3, 13, 3, 13 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 1
        }
      }
    } ]
  }, {
    "kind" : "VarDef",
    "location" : [ 4, 1, 4, 10 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 4, 1, 4, 6 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 4, 1, 4, 1 ],
        "name" : "x"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 4, 4, 4, 6 ],
        "className" : "int"
      }
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 4, 10, 4, 10 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0
    }
  } ],
  "statements" : [ {
    "kind" : "ExprStmt",
    "location" : [ 5, 1, 5, 3 ],
    "expr" : {
      "kind" : "CallExpr",
      "location" : [ 5, 1, 5, 3 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      },
      "function" : {
        "kind" : "Identifier",
        "location" : [ 5, 1, 5, 1 ],
        "inferredType" : {
          "kind" : "FuncType",
          "parameters" : [ ],
          "returnType" : {
            "kind" : "ClassValueType",
            "className" : "<None>"
          }
        },
        "name" : "f"
      },
      "args" : [ ]
    }
  }, {
    "kind" : "ExprStmt",
    "location" : [ 6, 1, 6, 8 ],
    "expr" : {
      "kind" : "CallExpr",
      "location" : [ 6, 1, 6, 8 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      },
      "function" : {
        "kind" : "Identifier",
        "location" : [ 6, 1, 6, 5 ],
        "inferredType" : {
          "kind" : "FuncType",
          "parameters" : [ {
            "kind" : "ClassValueType",
            "className" : "object"
          } ],
          "returnType" : {
            "kind" : "ClassValueType",
            "className" : "<None>"
          }
        },
        "name" : "print"
      },
      "args" : [ {
        "kind" : "Identifier",
        "location" : [ 6, 7, 6, 7 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "name" : "x"
      } ]
    }
  } ],
  "errors" : {
    "errors" : [ ],
    "kind" : "Errors",
    "location" : [ 0, 0, 0, 0 ]
  }
}
